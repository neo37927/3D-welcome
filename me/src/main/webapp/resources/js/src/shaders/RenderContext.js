var RenderContext=function(a){var b,c,d,e,f,g,h=a,i=[],j={pending:!1,callback:void 0,dataUrl:void 0},k={canvas:h,alpha:!1,depth:!0,stencil:!1,antialias:!1,premultipliedAlpha:!0,preserveDrawingBuffer:!1,logarithmicDepthBuffer:!1,autoClear:!1,clearColor:0,clearAlpha:0,sortObjects:!0,shadowMapEnabled:!1,shadowMapType:THREE.PCFShadowMap,shadowMapCullFace:THREE.CullFaceFront,shadowMapDebug:!1},l={fov:45,near:1,far:1e3},m=function(){b=new THREE.WebGLRenderer(k),b.setSize(c,d),b.setClearColor(k.clearColor,k.clearAlpha),b.autoClear=k.autoClear,b.sortObjects=k.sortObjects,b.shadowMapEnabled=k.shadowMapEnabled,b.shadowMapType=k.shadowMapType,b.shadowMapCullFace=k.shadowMapCullFace,b.shadowMapDebug=k.shadowMapDebug};this.init=function(){c=h.clientWidth,d=h.clientHeight,e=c/d,m(),f=new THREE.PerspectiveCamera(l.fov,e,l.near,l.far),g=new THREE.Scene,this.customInit()},this.setSize=function(a,g){c=a,d=g,e=c/d,b.setSize(c,d),f.aspect=e,f.updateProjectionMatrix()},this.update=function(a){b.clearTarget(null);for(var c=0;c<i.length;c++)i[c](a);b.render(g,f),j.pending&&(j.dataUrl=b.domElement.toDataURL(),j.pending=!1,j.callback&&j.callback(j.dataUrl))},this.customInit=function(){f.position.z=10},this.getRenderer=function(){return b},this.getScene=function(){return g},this.getCamera=function(){return f},this.getImageData=function(a){j.pending=!0,j.callback=a}};RenderContext.prototype.constructor=RenderContext;